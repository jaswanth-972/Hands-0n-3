import time
import numpy as np
import matplotlib.pyplot as plt

# Original function
def f_original(n):
    x = 1
    for i in range(n):
        for j in range(n):
            x = x + 1
    return x

# Modified function
def f_modified(n):
    x = 1
    y = 1
    for i in range(n):
        for j in range(n):
            x = x + 1
            y = i + j
    return x

# Measure time for various n
ns = np.array(list(range(1, 10001, 500)))  # Convert ns to a numpy array
times_original = []
times_modified = []

for n in ns:
    # Timing the original function
    start = time.time()
    f_original(n)
    end = time.time()
    times_original.append(end - start)
    
    # Timing the modified function
    start = time.time()
    f_modified(n)
    end = time.time()
    times_modified.append(end - start)

# Plot the results
plt.figure(figsize=(12, 6))
plt.plot(ns, times_original, label='Original Function', marker='o')
plt.plot(ns, times_modified, label='Modified Function', marker='o')
plt.xlabel('n')
plt.ylabel('Time (seconds)')
plt.title('Execution Time of Original and Modified Functions')
plt.legend()
plt.grid(True)
plt.show()
